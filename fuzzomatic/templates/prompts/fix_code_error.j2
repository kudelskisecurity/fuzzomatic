Given the following Rust program code and its build error message,
fix the code without affecting its functionality.
First explain the reason, then output the whole fixed code.

If a function is missing, fix it by adding `use module_name` statements or `extern crate module_name` statements for the related libraries.
You may need to add more than one missing import statement.

Never suggest changes to other files.

Note that it's import to always produce fixed code that has the following structure:

```
#![no_main]

// any other extern crate declarations go here
extern crate libfuzzer_sys;

use libfuzzer_sys::fuzz_target;
// any other imports go here



fuzz_target!(|data: &[u8]| {
    // fuzzed code goes here

});

```

Rust program code:
```
{{ code_snippet }}
```

Build error message:
{{ error }}

Fixed code: